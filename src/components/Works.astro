---
// Works.astro - Using JSON data for portfolio items
import portfolioData from '../data/portfolio-data.json';
const { works, filters } = portfolioData;

// Function to get the icon SVG path based on the icon name
function getIconPath(iconName) {
  const icons = {
    "shopping-bag": "M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z",
    "home": "M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6",
    "cube": "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4",
    "shopping-cart": "M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z",
    "beaker": "M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z",
    "paint-brush": "M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01"
  };
  
  return icons[iconName] || icons["cube"]; // Default to cube if icon not found
}
---

<section id="works" class="relative py-24 bg-gray-950 overflow-hidden">
  <!-- 背景装飾 -->
  <div class="absolute inset-0 z-0">
    <!-- グリッドオーバーレイ -->
    <div class="absolute inset-0 grid-overlay opacity-10"></div>

    <!-- 角度のついた区切り線 -->
    <div
      class="absolute top-0 left-0 w-full h-16 bg-gradient-to-b from-gray-900/50 to-transparent"
    >
    </div>
  </div>

  <div class="container relative z-10 px-6 mx-auto">
    <!-- セクションヘッダー -->
    <div class="max-w-3xl mx-auto text-center mb-16">
      <div
        class="inline-block px-3 py-1 mb-4 text-xs tracking-wider text-indigo-300 uppercase bg-indigo-900/50 backdrop-blur-sm border border-indigo-800 rounded-sm"
      >
        制作実績
      </div>
      <h2 class="text-3xl md:text-4xl font-light text-white mb-4">
        多様な業界での<br /><span class="text-indigo-400">実績</span>
      </h2>
      <p class="text-gray-400 font-light leading-relaxed">
        様々な業界のお客様と共に制作した実績の一部をご紹介します。
      </p>
    </div>

    <!-- 実績フィルター -->
    <div class="flex flex-wrap justify-center mb-12 gap-2">
      {filters.map((filter, index) => (
        <button
          class={`filter-btn ${index === 0 ? 'active px-4 py-2 text-sm tracking-wider text-white bg-indigo-700/50 border border-indigo-600/50' : 'px-4 py-2 text-sm tracking-wider text-gray-300 bg-white/5 border border-white/10'} rounded-sm hover:bg-white/10 transition-colors`}
          data-filter={filter.id}
        >
          {filter.label}
        </button>
      ))}
    </div>

    <!-- 実績ギャラリー -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
      {works.map((work) => (
        <div class="work-item group" data-category={work.category.join(' ')}>
          <a href={`/works/${work.id}`} class="block">
            <div
              class="relative overflow-hidden rounded-sm backdrop-blur-sm bg-white/5 border border-white/10 transition-all duration-300 hover:bg-white/10"
            >
              <!-- サムネイル -->
              <div class="aspect-w-16 aspect-h-12 overflow-hidden">
                <div
                  class={`w-full h-full bg-gradient-to-br ${work.color} group-hover:scale-105 transition-transform duration-500`}
                >
                </div>
                <!-- プレースホルダー画像 -->
                <div class="absolute inset-0 flex items-center justify-center">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="w-12 h-12 text-white/30"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="1"
                      d={getIconPath(work.icon)}
                    ></path>
                  </svg>
                </div>
                <!-- オーバーレイ -->
                <div
                  class="absolute inset-0 bg-gradient-to-t from-gray-900 to-transparent opacity-50"
                >
                </div>
              </div>

              <!-- コンテンツ -->
              <div class="p-6">
                <div class="flex justify-between items-start mb-3">
                  <span
                    class="inline-block px-2 py-1 text-xs tracking-wider text-indigo-300 bg-indigo-900/50 rounded-sm"
                  >
                    {work.category.includes('ec') && work.category.includes('corporate') 
                      ? 'コーポレート・EC'
                      : work.category.includes('ec') 
                        ? 'ECサイト' 
                        : 'コーポレートサイト'}
                  </span>
                  <span class="text-gray-400 text-xs">{work.year}年</span>
                </div>
                <h3 class="text-xl font-medium text-white mb-2">
                  {work.title}
                </h3>
                <p class="text-gray-400 font-light text-sm mb-4">
                  {work.description}
                </p>
                <div class="flex items-center text-indigo-400 text-sm">
                  <span>詳細を見る</span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                  </svg>
                </div>
              </div>
            </div>
          </a>
        </div>
      ))}
    </div>

    <!-- もっと見るボタン -->
    <div class="text-center">
      <a
        href="/works"
        class="inline-flex items-center px-6 py-3 text-sm tracking-wider text-white border border-indigo-500/50 rounded-sm hover:bg-indigo-700/30 transition-colors"
      >
        <span>もっと実績を見る</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-4 h-4 ml-2"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M19 9l-7 7-7-7"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  /* グリッドオーバーレイ */
  .grid-overlay {
    background-image: linear-gradient(
        rgba(255, 255, 255, 0.05) 1px,
        transparent 1px
      ),
      linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
    background-size: 40px 40px;
    width: 100%;
    height: 100%;
  }

  /* アスペクト比 */
  .aspect-w-16 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 16;
  }

  .aspect-h-12 {
    --tw-aspect-h: 12;
  }

  .aspect-w-16 > * {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // フィルタリング機能
    const filterBtns = document.querySelectorAll(".filter-btn");
    const workItems = document.querySelectorAll(".work-item");

    filterBtns.forEach((btn) => {
      btn.addEventListener("click", () => {
        // アクティブクラスを全て削除
        filterBtns.forEach((b) =>
          b.classList.remove("active", "bg-indigo-700/50", "text-white")
        );
        filterBtns.forEach((b) =>
          b.classList.add("bg-white/5", "text-gray-300")
        );

        // クリックされたボタンをアクティブに
        btn.classList.remove("bg-white/5", "text-gray-300");
        btn.classList.add("active", "bg-indigo-700/50", "text-white");

        // フィルタリング
        const filter = btn.getAttribute("data-filter");

        workItems.forEach((item) => {
          if (filter === "all") {
            item.style.display = "block";
          } else {
            const categories = item.getAttribute("data-category").split(" ");
            if (categories.includes(filter)) {
              item.style.display = "block";
            } else {
              item.style.display = "none";
            }
          }
        });
      });
    });
  });
</script>